name: Issue Action

on:
  issues:
    types: [opened, labeled, unlabeled]

jobs:
  manage-milestones:
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: shows labels 
      uses: actions/github-script@v7
      with:
        script: |
          core.debug('Getting label for ' + context.issue.number)
          const labels = await github.rest.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number
          })
          core.debug('Counting labels:')
          core.debug(JSON.stringify(labels))

    - name: Add needs triage label
      if: github.event.action == 'opened' && join(github.event.labels) == ''
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['Needs Triage']
          })

    - name: Add High Priority Milestone
      if: github.event.action == 'labeled' && contains(github.event.label.name, 'P1')
      uses: actions/github-script@v7
      with:
        script: |
          const label = context.payload.label.name;
          if (label === 'P1') {
            const issue = context.issue;
            const milestones = await github.rest.issues.listMilestones({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const milestone = milestones.data.find(m => m.title === 'High Priority');
            if (milestone) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                milestone: milestone.number
              });
            }
          }

    - name: Remove "High Priority" milestone from issues that remove the "P1" label
      if: github.event.action == 'unlabeled'
      uses: actions/github-script@v7
      with:
        script: |
          const label = context.payload.label.name;
          if (label === 'P1') {
            const issue = context.issue;
            const milestones = await github.rest.issues.listMilestones({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const milestone = milestones.data.find(m => m.title === 'High Priority');
            if (milestone) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                milestone: null
              });
            }
          }



    - name: P2 or P3 Label added, Remove Needs Triage label
      if: github.event.action == 'labeled' && (contains(github.event.label.name, 'P2') || contains(github.event.label.name, 'P3'))
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.removeLabel({
            issue_number: issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: 'Needs Triage'
          });
